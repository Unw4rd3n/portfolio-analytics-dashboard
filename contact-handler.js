// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å EmailJS
class ContactHandler {
    constructor() {
        this.form = document.querySelector('.contact-form');
        
        // üîë –ù–ê–°–¢–†–û–ô–ö–ò EMAILJS - –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –°–í–û–ò –ö–õ–Æ–ß–ò
        this.config = {
            serviceId: 'service_snad316',        // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Service ID
            templateId: 'template_ynizv1c',      // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Template ID  
            publicKey: 'Dyvdc5SstIoFQA2NV',        // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Public Key
            toEmail: 'nickfgh@mail.ru'           // –í–∞—à email –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
        };
        
        this.init();
    }

    init() {
        if (this.form) {
            this.form.addEventListener('submit', (e) => {
                e.preventDefault();
                this.handleSubmit();
            });
        }
    }

    async handleSubmit() {
        const formData = new FormData(this.form);
        const data = {
            name: formData.get('name') || this.form.querySelector('input[type="text"]').value,
            email: formData.get('email') || this.form.querySelector('input[type="email"]').value,
            message: formData.get('message') || this.form.querySelector('textarea').value
        };

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!data.name || !data.email || !data.message) {
            this.showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è', 'error');
            return;
        }

        if (!this.isValidEmail(data.email)) {
            this.showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email', 'error');
            return;
        }

        try {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
            this.showLoading(true);
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ (–∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä)
            await this.sendMessage(data);
            
            this.showNotification('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!', 'success');
            this.form.reset();
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
            this.showNotification('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', 'error');
        } finally {
            this.showLoading(false);
        }
    }

    async sendMessage(data) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ EmailJS –∑–∞–≥—Ä—É–∂–µ–Ω
        if (typeof emailjs === 'undefined') {
            throw new Error('EmailJS –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞.');
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª—é—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã
        if (this.config.serviceId === 'YOUR_SERVICE_ID' || 
            this.config.templateId === 'YOUR_TEMPLATE_ID' || 
            this.config.publicKey === 'YOUR_PUBLIC_KEY') {
            throw new Error('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –≤–∞—à–∏ EmailJS –∫–ª—é—á–∏ –≤ —Ñ–∞–π–ª–µ contact-handler.js');
        }

        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ EmailJS
            const result = await emailjs.send(
                this.config.serviceId,
                this.config.templateId,
                {
                    from_name: data.name,
                    from_email: data.email,
                    message: data.message,
                    to_email: this.config.toEmail,
                    reply_to: data.email
                },
                this.config.publicKey
            );

            console.log('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', result);
            return result;
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ EmailJS:', error);
            throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ EmailJS');
        }
    }

    isValidEmail(email) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return emailRegex.test(email);
    }

    showLoading(show) {
        const submitBtn = this.form.querySelector('.submit-btn');
        if (show) {
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –û—Ç–ø—Ä–∞–≤–∫–∞...';
            submitBtn.disabled = true;
        } else {
            submitBtn.innerHTML = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å';
            submitBtn.disabled = false;
        }
    }

    showNotification(message, type = 'info') {
        // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        const existing = document.querySelectorAll('.notification');
        existing.forEach(n => n.remove());

        const notification = document.createElement('div');
        notification.className = `notification ${type}`;
        notification.innerHTML = `
            <div class="notification-content">
                <i class="fas ${type === 'success' ? 'fa-check-circle' : type === 'error' ? 'fa-exclamation-circle' : 'fa-info-circle'}"></i>
                <span>${message}</span>
            </div>
        `;
        
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 1rem 1.5rem;
            background: ${type === 'success' ? '#4ecdc4' : type === 'error' ? '#ff6b6b' : '#45b7d1'};
            color: white;
            border-radius: 10px;
            z-index: 10000;
            animation: slideInRight 0.3s ease;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
            max-width: 400px;
        `;
        
        document.body.appendChild(notification);
        
        setTimeout(() => {
            notification.style.animation = 'slideOutRight 0.3s ease';
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.remove();
                }
            }, 300);
        }, 4000);
    }
}

// –î–æ–±–∞–≤–ª—è–µ–º CSS –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const notificationStyle = document.createElement('style');
notificationStyle.textContent = `
    .notification-content {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }
    
    @keyframes slideInRight {
        from {
            transform: translateX(100%);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }
    
    @keyframes slideOutRight {
        from {
            transform: translateX(0);
            opacity: 1;
        }
        to {
            transform: translateX(100%);
            opacity: 0;
        }
    }
`;
document.head.appendChild(notificationStyle);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º EmailJS –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã
document.addEventListener('DOMContentLoaded', () => {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º EmailJS —Å –≤–∞—à–∏–º Public Key
    // –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_PUBLIC_KEY' –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π –∫–ª—é—á
    emailjs.init('Dyvdc5SstIoFQA2NV');
    
    // –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã
    new ContactHandler();
});
